# coding: utf-8

"""
    CDR Banking API

    Consumer Data Standards APIs created by the Data Standards Body (DSB), with the Data Standards Chair as the decision maker to meet the needs of the Consumer Data Right

    The version of the OpenAPI document: 1.29.0
    Contact: contact@consumerdatastandards.gov.au
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from au_open_banking_spec.models.banking_account_detail_v3 import BankingAccountDetailV3

class TestBankingAccountDetailV3(unittest.TestCase):
    """BankingAccountDetailV3 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BankingAccountDetailV3:
        """Test BankingAccountDetailV3
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BankingAccountDetailV3`
        """
        model = BankingAccountDetailV3()
        if include_optional:
            return BankingAccountDetailV3(
                account_id = '',
                creation_date = '',
                display_name = '',
                nickname = '',
                open_status = 'OPEN',
                is_owned = True,
                account_ownership = 'UNKNOWN',
                masked_number = '',
                product_category = 'BUSINESS_LOANS',
                product_name = '',
                bsb = '',
                account_number = '',
                bundle_name = '',
                specific_account_u_type = 'creditCard',
                term_deposit = [
                    au_open_banking_spec.models.banking_term_deposit_account.BankingTermDepositAccount(
                        lodgement_date = '', 
                        maturity_date = '', 
                        maturity_amount = '', 
                        maturity_currency = '', 
                        maturity_instructions = 'HOLD_ON_MATURITY', )
                    ],
                credit_card = au_open_banking_spec.models.banking_credit_card_account.BankingCreditCardAccount(
                    min_payment_amount = '', 
                    payment_due_amount = '', 
                    payment_currency = '', 
                    payment_due_date = '', ),
                loan = au_open_banking_spec.models.banking_loan_account_v2.BankingLoanAccountV2(
                    original_start_date = '', 
                    original_loan_amount = '', 
                    original_loan_currency = '', 
                    loan_end_date = '', 
                    next_instalment_date = '', 
                    min_instalment_amount = '', 
                    min_instalment_currency = '', 
                    max_redraw = '', 
                    max_redraw_currency = '', 
                    min_redraw = '', 
                    min_redraw_currency = '', 
                    offset_account_enabled = True, 
                    offset_account_ids = [
                        ''
                        ], 
                    repayment_type = 'PRINCIPAL_AND_INTEREST', 
                    repayment_frequency = '', ),
                deposit_rate = '',
                lending_rate = '',
                deposit_rates = [
                    au_open_banking_spec.models.banking_product_deposit_rate.BankingProductDepositRate(
                        deposit_rate_type = 'BONUS', 
                        rate = '', 
                        calculation_frequency = '', 
                        application_frequency = '', 
                        tiers = [
                            au_open_banking_spec.models.banking_product_rate_tier_v3.BankingProductRateTierV3(
                                name = '', 
                                unit_of_measure = 'DAY', 
                                minimum_value = 1.337, 
                                maximum_value = 1.337, 
                                rate_application_method = 'PER_TIER', 
                                applicability_conditions = au_open_banking_spec.models.banking_product_rate_condition.BankingProductRateCondition(
                                    additional_info = '', 
                                    additional_info_uri = '', ), 
                                additional_info = '', 
                                additional_info_uri = '', )
                            ], 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', )
                    ],
                lending_rates = [
                    au_open_banking_spec.models.banking_product_lending_rate_v2.BankingProductLendingRateV2(
                        lending_rate_type = 'BUNDLE_DISCOUNT_FIXED', 
                        rate = '', 
                        comparison_rate = '', 
                        calculation_frequency = '', 
                        application_frequency = '', 
                        interest_payment_due = 'IN_ADVANCE', 
                        repayment_type = 'INTEREST_ONLY', 
                        loan_purpose = 'INVESTMENT', 
                        tiers = [
                            au_open_banking_spec.models.banking_product_rate_tier_v3.BankingProductRateTierV3(
                                name = '', 
                                unit_of_measure = 'DAY', 
                                minimum_value = 1.337, 
                                maximum_value = 1.337, 
                                rate_application_method = 'PER_TIER', 
                                applicability_conditions = au_open_banking_spec.models.banking_product_rate_condition.BankingProductRateCondition(
                                    additional_info = '', 
                                    additional_info_uri = '', ), 
                                additional_info = '', 
                                additional_info_uri = '', )
                            ], 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', )
                    ],
                features = [
                    au_open_banking_spec.models.banking_account_detail_v3_all_of_features_inner.BankingAccountDetailV3_allOf_features_inner()
                    ],
                fees = [
                    au_open_banking_spec.models.banking_product_fee.BankingProductFee(
                        name = '', 
                        fee_type = 'DEPOSIT', 
                        amount = '', 
                        balance_rate = '', 
                        transaction_rate = '', 
                        accrued_rate = '', 
                        accrual_frequency = '', 
                        currency = '', 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', 
                        discounts = [
                            au_open_banking_spec.models.banking_product_discount.BankingProductDiscount(
                                description = '', 
                                discount_type = 'BALANCE', 
                                amount = '', 
                                balance_rate = '', 
                                transaction_rate = '', 
                                accrued_rate = '', 
                                fee_rate = '', 
                                additional_value = '', 
                                additional_info = '', 
                                additional_info_uri = '', 
                                eligibility = [
                                    au_open_banking_spec.models.banking_product_discount_eligibility.BankingProductDiscountEligibility(
                                        discount_eligibility_type = 'BUSINESS', 
                                        additional_value = '', 
                                        additional_info = '', 
                                        additional_info_uri = '', )
                                    ], )
                            ], )
                    ],
                addresses = [
                    au_open_banking_spec.models.common_physical_address.CommonPhysicalAddress(
                        address_u_type = 'paf', 
                        simple = au_open_banking_spec.models.common_simple_address.CommonSimpleAddress(
                            mailing_name = '', 
                            address_line1 = '', 
                            address_line2 = '', 
                            address_line3 = '', 
                            postcode = '', 
                            city = '', 
                            state = '', 
                            country = 'AUS', ), 
                        paf = au_open_banking_spec.models.common_paf_address.CommonPAFAddress(
                            dpid = '', 
                            thoroughfare_number1 = 56, 
                            thoroughfare_number1_suffix = '', 
                            thoroughfare_number2 = 56, 
                            thoroughfare_number2_suffix = '', 
                            flat_unit_type = '', 
                            flat_unit_number = '', 
                            floor_level_type = '', 
                            floor_level_number = '', 
                            lot_number = '', 
                            building_name1 = '', 
                            building_name2 = '', 
                            street_name = '', 
                            street_type = '', 
                            street_suffix = '', 
                            postal_delivery_type = '', 
                            postal_delivery_number = 56, 
                            postal_delivery_number_prefix = '', 
                            postal_delivery_number_suffix = '', 
                            locality_name = '', 
                            postcode = '', 
                            state = '', ), )
                    ]
            )
        else:
            return BankingAccountDetailV3(
                account_id = '',
                display_name = '',
                account_ownership = 'UNKNOWN',
                masked_number = '',
                product_category = 'BUSINESS_LOANS',
                product_name = '',
        )
        """

    def testBankingAccountDetailV3(self):
        """Test BankingAccountDetailV3"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
