# coding: utf-8

"""
    CDR Banking API

    Consumer Data Standards APIs created by the Data Standards Body (DSB), with the Data Standards Chair as the decision maker to meet the needs of the Consumer Data Right

    The version of the OpenAPI document: 1.29.0
    Contact: contact@consumerdatastandards.gov.au
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from au_open_banking_spec.models.banking_product_detail_v4 import BankingProductDetailV4

class TestBankingProductDetailV4(unittest.TestCase):
    """BankingProductDetailV4 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BankingProductDetailV4:
        """Test BankingProductDetailV4
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BankingProductDetailV4`
        """
        model = BankingProductDetailV4()
        if include_optional:
            return BankingProductDetailV4(
                product_id = '',
                effective_from = '',
                effective_to = '',
                last_updated = '',
                product_category = 'BUSINESS_LOANS',
                name = '',
                description = '',
                brand = '',
                brand_name = '',
                application_uri = '',
                is_tailored = True,
                additional_information = {"eligibilityUri":"eligibilityUri","additionalFeesAndPricingUris":[{"additionalInfoUri":"additionalInfoUri","description":"description"},{"additionalInfoUri":"additionalInfoUri","description":"description"}],"additionalTermsUris":[{"additionalInfoUri":"additionalInfoUri","description":"description"},{"additionalInfoUri":"additionalInfoUri","description":"description"}],"bundleUri":"bundleUri","feesAndPricingUri":"feesAndPricingUri","additionalBundleUris":[{"additionalInfoUri":"additionalInfoUri","description":"description"},{"additionalInfoUri":"additionalInfoUri","description":"description"}],"additionalEligibilityUris":[{"additionalInfoUri":"additionalInfoUri","description":"description"},{"additionalInfoUri":"additionalInfoUri","description":"description"}],"additionalOverviewUris":[{"additionalInfoUri":"additionalInfoUri","description":"description"},{"additionalInfoUri":"additionalInfoUri","description":"description"}],"termsUri":"termsUri","overviewUri":"overviewUri"},
                card_art = [
                    {"imageUri":"imageUri","title":"title"}
                    ],
                bundles = [
                    au_open_banking_spec.models.banking_product_bundle.BankingProductBundle(
                        name = '', 
                        description = '', 
                        additional_info = '', 
                        additional_info_uri = '', 
                        product_ids = [
                            ''
                            ], )
                    ],
                features = [
                    au_open_banking_spec.models.banking_product_feature_v2.BankingProductFeatureV2(
                        feature_type = 'ADDITIONAL_CARDS', 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', )
                    ],
                constraints = [
                    au_open_banking_spec.models.banking_product_constraint.BankingProductConstraint(
                        constraint_type = 'MAX_BALANCE', 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', )
                    ],
                eligibility = [
                    au_open_banking_spec.models.banking_product_eligibility.BankingProductEligibility(
                        eligibility_type = 'BUSINESS', 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', )
                    ],
                fees = [
                    au_open_banking_spec.models.banking_product_fee.BankingProductFee(
                        name = '', 
                        fee_type = 'DEPOSIT', 
                        amount = '', 
                        balance_rate = '', 
                        transaction_rate = '', 
                        accrued_rate = '', 
                        accrual_frequency = '', 
                        currency = '', 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', 
                        discounts = [
                            au_open_banking_spec.models.banking_product_discount.BankingProductDiscount(
                                description = '', 
                                discount_type = 'BALANCE', 
                                amount = '', 
                                balance_rate = '', 
                                transaction_rate = '', 
                                accrued_rate = '', 
                                fee_rate = '', 
                                additional_value = '', 
                                additional_info = '', 
                                additional_info_uri = '', 
                                eligibility = [
                                    au_open_banking_spec.models.banking_product_discount_eligibility.BankingProductDiscountEligibility(
                                        discount_eligibility_type = 'BUSINESS', 
                                        additional_value = '', 
                                        additional_info = '', 
                                        additional_info_uri = '', )
                                    ], )
                            ], )
                    ],
                deposit_rates = [
                    au_open_banking_spec.models.banking_product_deposit_rate.BankingProductDepositRate(
                        deposit_rate_type = 'BONUS', 
                        rate = '', 
                        calculation_frequency = '', 
                        application_frequency = '', 
                        tiers = [
                            au_open_banking_spec.models.banking_product_rate_tier_v3.BankingProductRateTierV3(
                                name = '', 
                                unit_of_measure = 'DAY', 
                                minimum_value = 1.337, 
                                maximum_value = 1.337, 
                                rate_application_method = 'PER_TIER', 
                                applicability_conditions = au_open_banking_spec.models.banking_product_rate_condition.BankingProductRateCondition(
                                    additional_info = '', 
                                    additional_info_uri = '', ), 
                                additional_info = '', 
                                additional_info_uri = '', )
                            ], 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', )
                    ],
                lending_rates = [
                    au_open_banking_spec.models.banking_product_lending_rate_v2.BankingProductLendingRateV2(
                        lending_rate_type = 'BUNDLE_DISCOUNT_FIXED', 
                        rate = '', 
                        comparison_rate = '', 
                        calculation_frequency = '', 
                        application_frequency = '', 
                        interest_payment_due = 'IN_ADVANCE', 
                        repayment_type = 'INTEREST_ONLY', 
                        loan_purpose = 'INVESTMENT', 
                        tiers = [
                            au_open_banking_spec.models.banking_product_rate_tier_v3.BankingProductRateTierV3(
                                name = '', 
                                unit_of_measure = 'DAY', 
                                minimum_value = 1.337, 
                                maximum_value = 1.337, 
                                rate_application_method = 'PER_TIER', 
                                applicability_conditions = au_open_banking_spec.models.banking_product_rate_condition.BankingProductRateCondition(
                                    additional_info = '', 
                                    additional_info_uri = '', ), 
                                additional_info = '', 
                                additional_info_uri = '', )
                            ], 
                        additional_value = '', 
                        additional_info = '', 
                        additional_info_uri = '', )
                    ]
            )
        else:
            return BankingProductDetailV4(
                product_id = '',
                last_updated = '',
                product_category = 'BUSINESS_LOANS',
                name = '',
                description = '',
                brand = '',
                is_tailored = True,
        )
        """

    def testBankingProductDetailV4(self):
        """Test BankingProductDetailV4"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
