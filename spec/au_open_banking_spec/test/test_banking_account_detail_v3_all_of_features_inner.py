# coding: utf-8

"""
    CDR Banking API

    Consumer Data Standards APIs created by the Data Standards Body (DSB), with the Data Standards Chair as the decision maker to meet the needs of the Consumer Data Right

    The version of the OpenAPI document: 1.29.0
    Contact: contact@consumerdatastandards.gov.au
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from au_open_banking_spec.models.banking_account_detail_v3_all_of_features_inner import BankingAccountDetailV3AllOfFeaturesInner

class TestBankingAccountDetailV3AllOfFeaturesInner(unittest.TestCase):
    """BankingAccountDetailV3AllOfFeaturesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BankingAccountDetailV3AllOfFeaturesInner:
        """Test BankingAccountDetailV3AllOfFeaturesInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BankingAccountDetailV3AllOfFeaturesInner`
        """
        model = BankingAccountDetailV3AllOfFeaturesInner()
        if include_optional:
            return BankingAccountDetailV3AllOfFeaturesInner(
                feature_type = 'ADDITIONAL_CARDS',
                additional_value = '',
                additional_info = '',
                additional_info_uri = '',
                is_activated = True
            )
        else:
            return BankingAccountDetailV3AllOfFeaturesInner(
                feature_type = 'ADDITIONAL_CARDS',
        )
        """

    def testBankingAccountDetailV3AllOfFeaturesInner(self):
        """Test BankingAccountDetailV3AllOfFeaturesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
