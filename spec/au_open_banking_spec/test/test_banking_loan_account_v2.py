# coding: utf-8

"""
    CDR Banking API

    Consumer Data Standards APIs created by the Data Standards Body (DSB), with the Data Standards Chair as the decision maker to meet the needs of the Consumer Data Right

    The version of the OpenAPI document: 1.29.0
    Contact: contact@consumerdatastandards.gov.au
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from au_open_banking_spec.models.banking_loan_account_v2 import BankingLoanAccountV2

class TestBankingLoanAccountV2(unittest.TestCase):
    """BankingLoanAccountV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BankingLoanAccountV2:
        """Test BankingLoanAccountV2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BankingLoanAccountV2`
        """
        model = BankingLoanAccountV2()
        if include_optional:
            return BankingLoanAccountV2(
                original_start_date = '',
                original_loan_amount = '',
                original_loan_currency = '',
                loan_end_date = '',
                next_instalment_date = '',
                min_instalment_amount = '',
                min_instalment_currency = '',
                max_redraw = '',
                max_redraw_currency = '',
                min_redraw = '',
                min_redraw_currency = '',
                offset_account_enabled = True,
                offset_account_ids = [
                    ''
                    ],
                repayment_type = 'PRINCIPAL_AND_INTEREST',
                repayment_frequency = ''
            )
        else:
            return BankingLoanAccountV2(
        )
        """

    def testBankingLoanAccountV2(self):
        """Test BankingLoanAccountV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
